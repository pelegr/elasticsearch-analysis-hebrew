import de.undercouch.gradle.tasks.download.Download

buildscript {
    ext {
        elasticsearchVersion = System.getProperty("es.version", "7.4.0")
    }
    repositories {
        mavenLocal()
        jcenter()
    }
    dependencies {
        classpath "org.elasticsearch.gradle:build-tools:${elasticsearchVersion}"
    }
}

plugins {
    id "de.undercouch.download" version "3.2.0"
    id "com.jfrog.bintray" version "1.8.4"
    id "com.github.mgk.gradle.s3" version "1.4.0"
}
apply plugin: 'idea'
apply plugin: 'java'
apply plugin: 'elasticsearch.esplugin'

ext {
    licenseFile = rootProject.file('LICENSE')
    noticeFile = rootProject.file('NOTICE')
}


group = 'com.code972.hebmorph'
description = """elasticsearch-analysis-hebrew"""

licenseHeaders {
    additionalLicense 'AGPL3', 'GNU Affero General Public License', 'HebMorph\'s elasticsearch-analysis-hebrew'
    approvedLicenses += ['GNU Affero General Public License']
}

tasks.withType(JavaCompile) {
	options.encoding = 'UTF-8'
}

repositories {
    mavenLocal()
    jcenter()
}
dependencies {
    compile group: 'com.code972.hebmorph', name: 'hebmorph-lucene', version: lucene
    compileOnly group: 'org.apache.lucene', name: 'lucene-core', version: lucene
    compileOnly group: 'org.apache.lucene', name: 'lucene-analyzers-common', version: lucene
    compileOnly group: 'org.apache.logging.log4j', name: 'log4j-core', version: log4j
    compileOnly group: 'org.elasticsearch', name: 'elasticsearch', version: elasticsearch
    testCompile group: 'org.elasticsearch.test', name: 'framework', version: elasticsearch
    testCompile group: 'org.apache.lucene', name: 'lucene-test-framework', version: lucene
    testCompile group: 'junit', name: 'junit', version: junit
}

task getHspellDictionary(type: Download) {
    src([
        'https://github.com/synhershko/HebMorph/raw/master/hspell-data-files/hebrew.wgz',
        'https://github.com/synhershko/HebMorph/raw/master/hspell-data-files/hebrew.wgz.desc',
        'https://github.com/synhershko/HebMorph/raw/master/hspell-data-files/hebrew.wgz.prefixes',
        'https://github.com/synhershko/HebMorph/raw/master/hspell-data-files/hebrew.wgz.sizes',
        'https://github.com/synhershko/HebMorph/raw/master/hspell-data-files/hebrew.wgz.stems',
        'https://github.com/synhershko/HebMorph/raw/master/hspell-data-files/prefixes.c',
        'https://github.com/synhershko/HebMorph/raw/master/hspell-data-files/dmask.c',
        'https://github.com/synhershko/HebMorph/raw/master/hspell-data-files/prefix_h.gz'
    ])
    overwrite false
    dest 'hspell-data-files/'
}

task cleanPackaging(type:Delete) {
    delete 'src/main/packaging', 'src/main/plugin-metadata'
}

version = elasticsearch

esplugin {
    name 'analysis-hebrew'
    version rootProject.version
    description 'Hebrew analyzer powered by HebMorph'
    classname 'com.code972.elasticsearch.HebrewAnalysisPlugin'
}
thirdPartyAudit.enabled = false

task copyPackaging(type: Copy, dependsOn: [getHspellDictionary, cleanPackaging]) {
    into 'src/main/packaging'
    from 'plugin-security.policy'
    into('hspell-data-files') {
        from 'hspell-data-files'
    }
}
bundlePlugin.dependsOn copyPackaging

bintray {
    user    = 'peleg'
    key     = System.getenv('BINTRAY_KEY')
    filesSpec {
        from 'build/distributions/analysis-hebrew-'+ project.version +'.zip'
        rename ('analysis-hebrew-'+ project.version +'.zip', 'elasticsearch-analysis-hebrew-'+ project.version +'.zip')
        into '.'
    }
    publish = true
    pkg {
        repo = 'analysis-hebrew'
        name = 'elasticsearch-analysis-hebrew-plugin'
        licenses = ['AGPL-V3']
        publicDownloadNumbers = true

        vcsUrl = 'https://github.com/pelegr/elasticsearch-analysis-hebrew.git'
        githubRepo = 'pelegr/elasticsearch-analysis-hebrew'
        githubReleaseNotesFile = 'README.md'
        websiteUrl = 'https://github.com/pelegr'

        version {
            name = project.version
            vcsTag = elasticsearch
        }
    }
}

task release(dependsOn: bintrayUpload) {
    // Placeholder task just to run the bintrayUpload task
}

